/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.VisitQueue;
import Business.WorkQueue.VisitRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DoctorVisitsPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    private EcoSystem system;
    private ArrayList<VisitRequest> currvq;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorVisitsPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.network = network;
        this.system = system;
        populateRequestTable();
        txtLabResult.setEnabled(false);
        btnSave.setEnabled(false);
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tblVisitRequests.getModel();
        model.setRowCount(0);
        ArrayList<VisitRequest> vq = system.getVisitQueue().getVisitQueue();
        String doc = userAccount.getUsername();
        currvq = new ArrayList<>();
        System.out.println(vq);
        for (VisitRequest req : vq) {
            System.out.println(req.getDocUserName());
            if ((req.getDocUserName()!=null) && (req.getDocUserName().equals(doc))) {
                Object[] row = new Object[5];
                row[0] = req.getUserName();
                row[1] = req.getStatus();
                row[2] = req.getDocUserName();
                row[3] = req.getLabUserName();
                row[4] = req.getSalesPersonName();
                model.addRow(row);
            }
        }
        currvq = vq;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblVisitRequests = new javax.swing.JTable();
        btnReqTest = new javax.swing.JButton();
        txtDoctorComment = new javax.swing.JTextField();
        txtLabResult = new javax.swing.JTextField();
        lblResults = new javax.swing.JLabel();
        lblProblem = new javax.swing.JLabel();
        btnViewPrescription = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(241, 235, 218));
        setLayout(null);

        tblVisitRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Problem", "Test results", "Doctor comment", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblVisitRequests);
        if (tblVisitRequests.getColumnModel().getColumnCount() > 0) {
            tblVisitRequests.getColumnModel().getColumn(0).setResizable(false);
            tblVisitRequests.getColumnModel().getColumn(1).setResizable(false);
            tblVisitRequests.getColumnModel().getColumn(2).setResizable(false);
            tblVisitRequests.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(100, 90, 456, 97);

        btnReqTest.setBackground(new java.awt.Color(0, 153, 255));
        btnReqTest.setText("Request Test");
        btnReqTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReqTestActionPerformed(evt);
            }
        });
        add(btnReqTest);
        btnReqTest.setBounds(240, 220, 125, 29);

        txtDoctorComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorCommentActionPerformed(evt);
            }
        });
        add(txtDoctorComment);
        txtDoctorComment.setBounds(170, 270, 120, 26);
        add(txtLabResult);
        txtLabResult.setBounds(416, 270, 140, 26);

        lblResults.setForeground(new java.awt.Color(238, 238, 238));
        lblResults.setText("LabResults :");
        add(lblResults);
        lblResults.setBounds(330, 280, 76, 16);

        lblProblem.setForeground(new java.awt.Color(238, 238, 238));
        lblProblem.setText("Comment :");
        add(lblProblem);
        lblProblem.setBounds(90, 280, 70, 16);

        btnViewPrescription.setBackground(new java.awt.Color(0, 153, 255));
        btnViewPrescription.setText("View Prescription");
        btnViewPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPrescriptionActionPerformed(evt);
            }
        });
        add(btnViewPrescription);
        btnViewPrescription.setBounds(400, 220, 152, 29);

        btnBack.setBackground(new java.awt.Color(153, 153, 0));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(60, 30, 97, 29);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView);
        btnView.setBounds(100, 220, 75, 29);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave);
        btnSave.setBounds(450, 310, 75, 29);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(238, 238, 238));
        jLabel2.setText("Manage Visits");
        add(jLabel2);
        jLabel2.setBounds(220, 26, 230, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/saline.jpg"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1800, 900);
    }// </editor-fold>//GEN-END:initComponents

    private void btnReqTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReqTestActionPerformed
        int selectedRowIndex = tblVisitRequests.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Request not selected");
            return;
        }
        VisitRequest visitrequest = currvq.get(selectedRowIndex);
        visitrequest.setStatus("Lab requested");
    }//GEN-LAST:event_btnReqTestActionPerformed

    private void txtDoctorCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorCommentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorCommentActionPerformed

    private void btnViewPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPrescriptionActionPerformed
        int selectedRowIndex = tblVisitRequests.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Request not selected");
            return;
        }
        VisitRequest visitrequest = currvq.get(selectedRowIndex);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestLabTestJPanel", new DoctorPrescriptionJPanel(userProcessContainer, userAccount, organization, enterprise, network, system, visitrequest));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewPrescriptionActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        int selectedRowIndex = tblVisitRequests.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Request not selected");
            return;
        }
        VisitRequest visitrequest = currvq.get(selectedRowIndex);
        txtDoctorComment.setText(visitrequest.getDocComment());
        txtLabResult.setText(visitrequest.getLabComment());
        btnSave.setEnabled(true);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        int selectedRowIndex = tblVisitRequests.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Request not selected");
            return;
        }
        VisitRequest visitrequest = currvq.get(selectedRowIndex);
        visitrequest.setDocComment(txtDoctorComment.getText());
        btnSave.setEnabled(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReqTest;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnViewPrescription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblProblem;
    private javax.swing.JLabel lblResults;
    private javax.swing.JTable tblVisitRequests;
    private javax.swing.JTextField txtDoctorComment;
    private javax.swing.JTextField txtLabResult;
    // End of variables declaration//GEN-END:variables
}

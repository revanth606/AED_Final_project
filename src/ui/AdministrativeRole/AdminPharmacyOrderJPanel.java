/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AdministrativeRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WarehouseRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class AdminPharmacyOrderJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    private EcoSystem system;
    private ArrayList<Enterprise> manufacturers = new ArrayList<>();
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public AdminPharmacyOrderJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.network = network;
        this.system = system;
        //populateReqTable();
        populateCombo();
    }
    
    private void populateCombo(){
        jcbNetworks.removeAllItems();
        ArrayList<Network> networks = system.getNetworkList();
        for (Network n: networks) {
            jcbNetworks.addItem(n.getName());
        }
    }
    
    private void populateReqTable(){
        DefaultTableModel model = (DefaultTableModel) tblRequest.getModel();
        model.setRowCount(0);
        ArrayList<WarehouseRequest> reqs = system.getWareHouseQueue().getWareHouseQueue();
        for (WarehouseRequest req: reqs) {
            Object[] row = new Object[2];
            row[0] = req.getRequestId();
            row[1] = req.getStatus();
            
            model.addRow(row);
        }
    }
    
    private void populateManuTable(){
        DefaultTableModel model = (DefaultTableModel) tblManu.getModel();
        model.setRowCount(0);
        ArrayList<Network> networks = system.getNetworkList();
        Network currn = null;
        manufacturers = new ArrayList<>();
        for (Network n: networks) {
            if (n.getName().equals(jcbNetworks.getSelectedItem().toString())) {
                currn = n;
                break;
            };
        }
        ArrayList<Enterprise> manus = currn.getEnterpriseList(Enterprise.EnterpriseType.Manufacturer);
        for (Enterprise ent : manus){
            Object[] row = new Object[1];
            row[0] = ent.getName();
            
            model.addRow(row);
            manufacturers.add(ent);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblManu = new javax.swing.JTable();
        btnGetManu = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jcbNetworks = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        btnOrder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(241, 235, 218));
        setLayout(null);

        tblManu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManu);
        if (tblManu.getColumnModel().getColumnCount() > 0) {
            tblManu.getColumnModel().getColumn(0).setResizable(false);
            tblManu.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(119, 100, 480, 92);

        btnGetManu.setBackground(new java.awt.Color(0, 153, 255));
        btnGetManu.setText("Get Manufacturers");
        btnGetManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetManuActionPerformed(evt);
            }
        });
        add(btnGetManu);
        btnGetManu.setBounds(440, 53, 159, 29);

        backJButton.setBackground(new java.awt.Color(153, 153, 0));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton);
        backJButton.setBounds(98, 16, 97, 29);

        jLabel2.setText("Network");
        add(jLabel2);
        jLabel2.setBounds(123, 58, 53, 16);

        jcbNetworks.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbNetworks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNetworksActionPerformed(evt);
            }
        });
        add(jcbNetworks);
        jcbNetworks.setBounds(256, 54, 109, 27);

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRequest);
        if (tblRequest.getColumnModel().getColumnCount() > 0) {
            tblRequest.getColumnModel().getColumn(0).setResizable(false);
            tblRequest.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane2);
        jScrollPane2.setBounds(127, 277, 480, 92);

        btnOrder.setBackground(new java.awt.Color(0, 153, 255));
        btnOrder.setText("Place Order");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });
        add(btnOrder);
        btnOrder.setBounds(492, 219, 115, 29);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/tabs2.jpg"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1900, 900);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGetManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetManuActionPerformed
        populateManuTable();
//        Type type = (Type) organizationJComboBox.getSelectedItem();
//        directory.createOrganization(type);
//        populateTable();
    }//GEN-LAST:event_btnGetManuActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        int rowIndex = tblManu.getSelectedRow();
        WarehouseRequest wr = new WarehouseRequest();
        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Manufacturer not selected");
            return;
        }
        system.getWareHouseQueue().getWareHouseQueue().add(wr);
        System.out.println(rowIndex);
        wr.setManufacturerName(manufacturers.get(rowIndex).getName());
        populateReqTable();
    }//GEN-LAST:event_btnOrderActionPerformed

    private void jcbNetworksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNetworksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbNetworksActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnGetManu;
    private javax.swing.JButton btnOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox jcbNetworks;
    private javax.swing.JTable tblManu;
    private javax.swing.JTable tblRequest;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.AdministrativeRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Medication.Drug;
import Business.Network.Network;
import Business.Organization.UserOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.VisitRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jessi
 */
public class ManageDrugsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    private EcoSystem system;
    private ArrayList<VisitRequest> currvq;
    private ArrayList<Drug> drugs;
    /**
     * Creates new form ManageDrugsJPanel
     */
    public ManageDrugsJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.network = network;
        this.system = system;
        drugs = new ArrayList<>();
        populateTable();
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblDrugs.getModel();
        model.setRowCount(0);
        PharmacyEnterprise ent = (PharmacyEnterprise)this.enterprise;
        this.drugs = ent.getAllDrugs().getDrugDirectory();
        for (Drug drug : drugs) {
            Object[] row = new Object[1];
            row[0] = drug.getDrugName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrugs = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txtDrugName = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtDrugQuantity = new javax.swing.JTextField();
        lblQuantity = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(241, 235, 218));
        setLayout(null);

        tblDrugs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Drug Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDrugs);

        add(jScrollPane1);
        jScrollPane1.setBounds(118, 74, 246, 97);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(118, 27, 97, 29);

        btnAdd.setBackground(new java.awt.Color(0, 153, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd);
        btnAdd.setBounds(342, 389, 75, 29);

        btnUpdate.setBackground(new java.awt.Color(0, 153, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate);
        btnUpdate.setBounds(184, 389, 88, 29);

        lblName.setText("Name");
        add(lblName);
        lblName.setBounds(150, 217, 36, 16);
        add(txtDrugName);
        txtDrugName.setBounds(263, 212, 101, 26);

        btnView.setBackground(new java.awt.Color(0, 153, 255));
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView);
        btnView.setBounds(403, 83, 84, 29);

        btnDelete.setBackground(new java.awt.Color(255, 102, 102));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(409, 124, 84, 29);

        txtDrugQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDrugQuantityActionPerformed(evt);
            }
        });
        add(txtDrugQuantity);
        txtDrugQuantity.setBounds(263, 256, 101, 26);

        lblQuantity.setText("Quantity");
        add(lblQuantity);
        lblQuantity.setBounds(150, 261, 54, 16);
        add(txtPrice);
        txtPrice.setBounds(263, 310, 101, 26);

        lblPrice.setText("Price");
        add(lblPrice);
        lblPrice.setBounds(150, 315, 30, 16);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/tabs1.jpg"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1900, 900);
    }// </editor-fold>//GEN-END:initComponents

    private void txtDrugQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDrugQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDrugQuantityActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        int selectedRowIndex = tblDrugs.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Drug not selected");
            return;
        }
        Drug d = drugs.get(selectedRowIndex);
        txtDrugName.setText(d.getDrugName());
        if(d.getCost()==0){
            txtPrice.setText("");
        }else{
            txtPrice.setText(String.valueOf(d.getCost()));
        }
        if(d.getCost()==0){
            txtPrice.setText("");
        }else{
            txtDrugQuantity.setText(String.valueOf(d.getQuantity()));
        }
        
        
        populateTable();
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        addDrug();
        populateTable();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRowIndex = tblDrugs.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Drug not selected");
            return;
        }
        drugs.remove(selectedRowIndex);
        txtDrugName.setText("");
        txtDrugQuantity.setText("");
        txtPrice.setText("");
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRowIndex = tblDrugs.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Drug not selected");
            return;
        }
        drugs.remove(selectedRowIndex);
        addDrug();
        populateTable();
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JTable tblDrugs;
    private javax.swing.JTextField txtDrugName;
    private javax.swing.JTextField txtDrugQuantity;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    private void addDrug() {
        String drugName = txtDrugName.getText();
        int price = 0;
        int quant = 0;
        if (drugName.equals(null) || drugName.equals("")){
            JOptionPane.showMessageDialog(this, "Drug name cannot be empty");
            return;
        }
        for(Drug d: drugs){
            if(d.getDrugName().equals(drugName)){
                JOptionPane.showMessageDialog(this, "Drug with same name exists, consider modifying it");
            return;
            }
        }
        try{
            if(!(txtDrugQuantity.getText().equals("") || txtDrugQuantity.getText()==null)){
            
                quant = Integer.valueOf(txtDrugQuantity.getText());
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Quantity must contain integers");
            return;
        }
        try{
            if(!(txtPrice.getText().equals("") || txtPrice.getText()==null))
                price = Integer.valueOf(txtPrice.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Price must contain integers");
            return;
        }
        Drug d = new Drug();
        d.setDrugName(drugName);
        d.setQuantity(quant);
        d.setCost(price);
        drugs.add(d);
        txtDrugName.setText("");
        txtDrugQuantity.setText("");
        txtPrice.setText("");
    
    }
}
